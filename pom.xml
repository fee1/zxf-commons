<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.zxf</groupId>
    <artifactId>zxf-commons</artifactId>
    <!--项目产生的构件类型，例如jar、war、ear、pom。插件可以创建他们自己的构件类型，所以前面列的不是全部构件类型 -->
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>es-common</module>
        <module>test-common</module>
        <module>common</module>
        <module>cache-common</module>
        <module>nacos-cloud-app</module>
        <module>boot-app</module>
        <module>eureka-cloud-server-app</module>
        <module>eureka-client-app</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--设置编译版本-->
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>

        <spring-boot.version>2.2.1.RELEASE</spring-boot.version>
        <alibaba-cloud.version>2.2.0.RELEASE</alibaba-cloud.version>
        <spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>
        <swagger2.version>2.9.2</swagger2.version>
        <swagger-models.version>1.6.0</swagger-models.version>
        <swagger-annotations.version>1.6.0</swagger-annotations.version>
        <alibaba-fastjson.version>1.2.75</alibaba-fastjson.version>
<!--        <junit.version>4.8.2</junit.version>-->
<!--        <springboot-test.version>2.3.1.RELEASE</springboot-test.version>-->
<!--        <spring-test.version>5.2.7.RELEASE</spring-test.version>-->
<!--        <openFeign.version>2.2.3.RELEASE</openFeign.version>-->
        <mockito.version>1.10.19</mockito.version>
<!--        <lombok.version>1.18.12</lombok.version>-->
<!--        <google.code.gson.version>2.8.6</google.code.gson.version>-->
<!--        <searchbox.jest.version>6.3.1</searchbox.jest.version>-->
<!--        <spring.version>5.2.7.RELEASE</spring.version>-->
        <common-io.version>2.6</common-io.version>
        <protostuff.version>1.7.2</protostuff.version>
        <guava.version>23.0</guava.version>
        <bcprov.version>1.65</bcprov.version>
        <hutool.version>5.5.1</hutool.version>
        <poi-ooxml.version>5.0.0</poi-ooxml.version>


        <common.version>1.0-SNAPSHOT</common.version>
        <es-common.version>1.0-SNAPSHOT</es-common.version>
        <cache-common.version>1.0-SNAPSHOT</cache-common.version>
        <test-common.version>1.0-SNAPSHOT</test-common.version>
        <nacos-cloud-app.version>1.0-SNAPSHOT</nacos-cloud-app.version>
        <boot-app.version>1.0-SNAPSHOT</boot-app.version>
        <eureka-cloud-server-app.version>1.0-SNAPSHOT</eureka-cloud-server-app.version>
        <eureka-client-app.version>1.0-SNAPSHOT</eureka-client-app.version>
        <auth-common.version>1.0-SNAPSHOT</auth-common.version>
        <data-starter.version>1.0-SNAPSHOT</data-starter.version>
    </properties>

    <!--管理工具包的版本，管理使用工具包的人的jar版本-->
    <dependencyManagement>
        <dependencies>
            <!--管理外部依赖jar版本-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${alibaba-cloud.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <!--dependencies  未包含的部分-->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <!--Swagger-UI API文档生产工具-->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger2.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger2.version}</version>
            </dependency>
            <!--解决Swagger 2.9.2版本NumberFormatException-->
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-models</artifactId>
                <version>${swagger-models.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi-ooxml.version}</version>
            </dependency>
            <dependency>
                <groupId>io.protostuff</groupId>
                <artifactId>protostuff-api</artifactId>
                <version>${protostuff.version}</version>
            </dependency>
            <dependency>
                <groupId>io.protostuff</groupId>
                <artifactId>protostuff-core</artifactId>
                <version>${protostuff.version}</version>
            </dependency>
            <dependency>
                <groupId>io.protostuff</groupId>
                <artifactId>protostuff-runtime</artifactId>
                <version>${protostuff.version}</version>
            </dependency>
            <!--sm2 加解密包-->
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>${bcprov.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${common-io.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${alibaba-fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
            </dependency>




            <!--管理自定义jar版本-->
            <dependency>
                <groupId>com.zxf</groupId>
                <artifactId>common</artifactId>
                <version>${common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zxf</groupId>
                <artifactId>es-common</artifactId>
                <version>${es-common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zxf</groupId>
                <artifactId>cache-common</artifactId>
                <version>${cache-common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zxf</groupId>
                <artifactId>test-common</artifactId>
                <version>${test-common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zxf</groupId>
                <artifactId>nacos-cloud-app</artifactId>
                <version>${nacos-cloud-app.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zxf</groupId>
                <artifactId>boot-app</artifactId>
                <version>${boot-app.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zxf</groupId>
                <artifactId>eureka-cloud-server-app</artifactId>
                <version>${eureka-cloud-server-app.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zxf</groupId>
                <artifactId>eureka-client-app</artifactId>
                <version>${eureka-client-app.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!--公共jar-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${alibaba-fastjson.version}</version>
        </dependency>


        <!--加载配置ConfigurationProperties注解处理器-->
<!--        <dependency>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-configuration-processor</artifactId>-->
<!--            <optional>true</optional>&lt;!&ndash;编译阶段使用&ndash;&gt;-->
<!--        </dependency>-->

    </dependencies>

    <!--构建项目需要的信息 -->
    <build>
        <!--子项目可以引用的默认插件信息。该插件配置项直到被引用时才会被解析或绑定到生命周期。给定插件的任何本地配置都会覆盖这里的配置 -->
        <pluginManagement>
            <!--使用的插件列表 。 -->
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>